"use client";
import { useParams  } from 'next/navigation'; 
import { useState } from 'react'; 


//idea:

//here, when user gives email to reset password, a link is sent to user with resetpasword/tokenID.
//this tokenId is generated by backend (a JWT with short expiry ) when rest password request is sent by user .
//upon user clicking link in email, it routes to this page - then the tokenId+password from url is passed to the backend to validate the process.
//if the token id present there is active, password+token is accepted, and the password is changed along with destruction of JWT token

export default function ResetPassword() {

  const { token } = useParams();  // Get the 'token' from URL
  const [password, setPassword] = useState('');  // For storing password
  const [message, setMessage] = useState('');  // For displaying success or error messages

  const handleSubmit = async (e) => {
    e.preventDefault(); // Prevent default form submission
    if (!token) {
      setMessage('Invalid reset token.');
      return;
    }

    // Call the API endpoint for resetting the password
    const res = await fetch('/api/reset-password', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ token, password }),
    });

    const data = await res.json();  // Parse the JSON response
    setMessage(data.message);  // Display the message from the server
  };

  return (
    <div className="flex items-center justify-center min-h-screen bg-gray-100">
      <div className="w-full max-w-md p-6 bg-white rounded-lg shadow-md">
        <h1 className="text-2xl font-bold text-center text-gray-700 mb-4">Set New Password</h1>
        <form onSubmit={handleSubmit}>
          <div className="mb-4">
            <label className="block text-sm font-medium text-gray-600 mb-2">New Password</label>
            <input
              type="password"
              placeholder="Enter new password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
              className="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring focus:ring-blue-300"
            />
          </div>
          <button
            type="submit"
            className="w-full bg-blue-500 text-white py-2 rounded-lg hover:bg-blue-600 transition"
          >
            Reset Password
          </button>
        </form>
        {message && <p className="mt-4 text-center text-green-500">{message}</p>}
      </div>
    </div>
  );
}
